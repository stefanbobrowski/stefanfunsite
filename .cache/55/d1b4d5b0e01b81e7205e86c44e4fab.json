{"id":"../node_modules/hookrouter/dist/queryParams.js","dependencies":[{"name":"C:\\Users\\stefa\\Desktop\\FutureWebApps\\stefansite\\package.json","includedInParent":true,"mtime":1584470154891},{"name":"C:\\Users\\stefa\\Desktop\\FutureWebApps\\stefansite\\node_modules\\hookrouter\\package.json","includedInParent":true,"mtime":1567633600147},{"name":"react","loc":{"line":8,"column":44},"parent":"C:\\Users\\stefa\\Desktop\\FutureWebApps\\stefansite\\node_modules\\hookrouter\\dist\\queryParams.js","resolved":"C:\\Users\\stefa\\Desktop\\FutureWebApps\\stefansite\\node_modules\\react\\index.js"},{"name":"./isNode","loc":{"line":10,"column":45},"parent":"C:\\Users\\stefa\\Desktop\\FutureWebApps\\stefansite\\node_modules\\hookrouter\\dist\\queryParams.js","resolved":"C:\\Users\\stefa\\Desktop\\FutureWebApps\\stefansite\\node_modules\\hookrouter\\dist\\isNode.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useQueryParams = exports.getQueryParams = exports.setQueryParams = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _isNode = _interopRequireDefault(require(\"./isNode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar queryParamListeners = [];\nvar queryParamObject = {};\n\nvar setQueryParams = function setQueryParams(inObj) {\n  var replace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!(inObj instanceof Object)) {\n    throw new Error('Object required');\n  }\n\n  if (replace) {\n    queryParamObject = inObj;\n  } else {\n    Object.assign(queryParamObject, inObj);\n  }\n\n  var now = Date.now();\n  queryParamListeners.forEach(function (cb) {\n    return cb(now);\n  });\n\n  if (!_isNode.default) {\n    var qs = '?' + objectToQueryString(queryParamObject);\n\n    if (qs === location.search) {\n      return;\n    }\n\n    history.replaceState(null, null, location.pathname + (qs !== '?' ? qs : ''));\n  }\n};\n\nexports.setQueryParams = setQueryParams;\n\nvar getQueryParams = function getQueryParams() {\n  return Object.assign({}, queryParamObject);\n};\n/**\r\n * This takes an URL query string and converts it into a javascript object.\r\n * @param {string} inStr\r\n * @return {object}\r\n */\n\n\nexports.getQueryParams = getQueryParams;\n\nvar queryStringToObject = function queryStringToObject(inStr) {\n  var p = new URLSearchParams(inStr);\n  var result = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = p[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var param = _step.value;\n      result[param[0]] = param[1];\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return result;\n};\n/**\r\n * This takes a javascript object and turns it into a URL query string.\r\n * @param {object} inObj\r\n * @return {string}\r\n */\n\n\nvar objectToQueryString = function objectToQueryString(inObj) {\n  var qs = new URLSearchParams();\n  Object.entries(inObj).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return value !== undefined ? qs.append(key, value) : null;\n  });\n  return qs.toString();\n};\n\nif (!_isNode.default) {\n  queryParamObject = queryStringToObject(location.search.substr(1));\n}\n/**\r\n * This hook returns the currently set query parameters as object and offers a setter function\r\n * to set a new query string.\r\n *\r\n * All components that are hooked to the query parameters will get updated if they change.\r\n * Query params can also be updated along with the path, by calling `navigate(url, queryParams)`.\r\n *\r\n * @returns {array} [queryParamObject, setQueryParams]\r\n */\n\n\nvar useQueryParams = function useQueryParams() {\n  var setUpdate = _react.default.useState(0)[1];\n\n  _react.default.useEffect(function () {\n    queryParamListeners.push(setUpdate);\n    return function () {\n      var index = queryParamListeners.indexOf(setUpdate);\n\n      if (index === -1) {\n        return;\n      }\n\n      queryParamListeners.splice(index, 1);\n    };\n  }, [setUpdate]);\n\n  return [queryParamObject, setQueryParams];\n};\n\nexports.useQueryParams = useQueryParams;\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/queryParams.js"],"names":["queryParamListeners","queryParamObject","setQueryParams","inObj","replace","Object","Error","assign","now","Date","forEach","cb","isNode","qs","objectToQueryString","location","search","history","replaceState","pathname","getQueryParams","queryStringToObject","inStr","p","URLSearchParams","result","param","entries","key","value","undefined","append","toString","substr","useQueryParams","setUpdate","React","useState","useEffect","push","index","indexOf","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport isNode from './isNode';\r\n\r\nconst queryParamListeners = [];\r\nlet queryParamObject = {};\r\n\r\nexport const setQueryParams = (inObj, replace = false) => {\r\n\tif(!(inObj instanceof Object)){\r\n\t\tthrow new Error('Object required');\r\n\t}\r\n\tif(replace){\r\n\t\tqueryParamObject = inObj;\r\n\t} else {\r\n\t\tObject.assign(queryParamObject, inObj);\r\n\t}\r\n\tconst now = Date.now();\r\n\tqueryParamListeners.forEach(cb => cb(now));\r\n\tif (!isNode) {\r\n\t\tconst qs = '?' + objectToQueryString(queryParamObject);\r\n\t\tif(qs === location.search) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thistory.replaceState(null, null, location.pathname + (qs !== '?' ? qs : ''));\r\n\t}\r\n};\r\n\r\nexport const getQueryParams = () => Object.assign({}, queryParamObject);\r\n\r\n/**\r\n * This takes an URL query string and converts it into a javascript object.\r\n * @param {string} inStr\r\n * @return {object}\r\n */\r\nconst queryStringToObject = (inStr) => {\r\n\tconst p = new URLSearchParams(inStr);\r\n\tlet result = {};\r\n\tfor (let param of p) {\r\n\t\tresult[param[0]] = param[1];\r\n\t}\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * This takes a javascript object and turns it into a URL query string.\r\n * @param {object} inObj\r\n * @return {string}\r\n */\r\nconst objectToQueryString = (inObj) => {\r\n\tconst qs = new URLSearchParams();\r\n\tObject.entries(inObj).forEach(([key, value]) => value !== undefined ? qs.append(key, value) : null);\r\n\treturn qs.toString();\r\n};\r\n\r\nif(!isNode){\r\n\tqueryParamObject = queryStringToObject(location.search.substr(1));\r\n}\r\n\r\n/**\r\n * This hook returns the currently set query parameters as object and offers a setter function\r\n * to set a new query string.\r\n *\r\n * All components that are hooked to the query parameters will get updated if they change.\r\n * Query params can also be updated along with the path, by calling `navigate(url, queryParams)`.\r\n *\r\n * @returns {array} [queryParamObject, setQueryParams]\r\n */\r\nexport const useQueryParams = () => {\r\n\tconst setUpdate = React.useState(0)[1];\r\n\r\n\tReact.useEffect(() => {\r\n\t\tqueryParamListeners.push(setUpdate);\r\n\r\n\t\treturn () => {\r\n\t\t\tconst index = queryParamListeners.indexOf(setUpdate);\r\n\t\t\tif (index === -1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tqueryParamListeners.splice(index, 1);\r\n\t\t};\r\n\t}, [setUpdate]);\r\n\r\n\treturn [queryParamObject, setQueryParams];\r\n};\r\n"]}},"error":null,"hash":"89f30b353639dde776ebb0b3dfc70306","cacheData":{"env":{}}}